class Solution {
  public:
  // Function to return list containing vertices in Topological order.
    vector<int> topologicalSort(vector<vector<int>>& adj) {
        int v=adj.size();
        queue<int>q;  // <- Kahn's Algorithm
        vector<int>inDegree(v,0);
        
        for(int i=0;i<v;i++)
        {
            for(int &node:adj[i])
            {
                inDegree[node]++;
            }
        }
        
        for(int i=0;i<v;i++)
        {
            if(inDegree[i]==0)
            q.push(i);
        }
        vector<int>result;
        
        while(!q.empty())
        {
            int node=q.front();
            result.push_back(node);
            q.pop();
            
            for(int &u:adj[node])
            {
                inDegree[u]--;
                
                if(inDegree[u]==0)
                q.push(u);
            }
        }
        
        return result;
}
        
